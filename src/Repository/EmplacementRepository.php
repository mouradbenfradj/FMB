<?php

namespace App\Repository;

use App\Entity\Emplacement;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\Persistence\ManagerRegistry;
use App\Entity\Magasins;

/**
 * EmplacementRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EmplacementRepository extends ServiceEntityRepository
{
    public function __construct(ManagerRegistry $registry)
    {
        parent::__construct($registry, Emplacement::class);
    }

    // /**
    //  * @return Carousel[] Returns an array of Carousel objects
    //  */
    /*
    public function findByExampleField($value)
    {
        return $this->createQueryBuilder('c')
            ->andWhere('c.exampleField = :val')
            ->setParameter('val', $value)
            ->orderBy('c.id', 'ASC')
            ->setMaxResults(10)
            ->getQuery()
            ->getResult()
        ;
    }
    */

    /*
    public function findOneBySomeField($value): ?Carousel
    {
        return $this->createQueryBuilder('c')
            ->andWhere('c.exampleField = :val')
            ->setParameter('val', $value)
            ->getQuery()
            ->getOneOrNullResult()
        ;
    }
    */
    public function getTotaleEmplacementByParc(Magasins $parc)
    {
        $qb = $this->createQueryBuilder('emplacement')
            ->select('filiere')
            ->addSelect('segment')
            ->addSelect('flotteur')
            ->addSelect('emplacement')
            ->addSelect('stockslanterne')
            ->addSelect('stockscorde')
            ->addSelect('corde')
            ->addSelect('stockspoches')
            ->addSelect('poches')
            ->addSelect('articlel')
            ->addSelect('articlec')
            ->addSelect('articlep')
            ->addSelect('refStockArticlel')
            ->addSelect('refStockArticlec')
            ->addSelect('refStockArticlep')
            ->addSelect('refArticlel')
            ->addSelect('refArticlec')
            ->addSelect('refArticlep')
            ->addSelect('processusl')
            ->addSelect('processusc')
            ->addSelect('processusp')
            ->addSelect('phasesProcessusl')
            ->addSelect('phasesProcessusc')
            ->addSelect('phasesProcessusp')
            ->join('emplacement.flotteur', 'flotteur')
            ->join('flotteur.segment', 'segment')
            ->join('segment.filiere', 'filiere')
            ->leftJoin('emplacement.stockslanterne', 'stockslanterne')
            ->leftJoin('stockslanterne.poches', 'poches')
            ->leftJoin('stockslanterne.processus', 'processusl')
            ->leftJoin('processusl.phasesProcessus', 'phasesProcessusl')
            ->leftJoin('stockslanterne.article', 'articlel')
            ->leftJoin('articlel.refStockArticle', 'refStockArticlel')
            ->leftJoin('refStockArticlel.refArticle', 'refArticlel')
            ->leftJoin('emplacement.stockscorde', 'stockscorde')
            ->leftJoin('stockscorde.corde', 'corde')
            ->leftJoin('stockscorde.processus', 'processusc')
            ->leftJoin('processusc.phasesProcessus', 'phasesProcessusc')
            ->leftJoin('stockscorde.article', 'articlec')
            ->leftJoin('articlec.refStockArticle', 'refStockArticlec')
            ->leftJoin('refStockArticlec.refArticle', 'refArticlec')
            ->leftJoin('emplacement.stockspoches', 'stockspoches')
            ->leftJoin('stockspoches.processus', 'processusp')
            ->leftJoin('processusp.phasesProcessus', 'phasesProcessusp')
            ->leftJoin('stockspoches.article', 'articlep')
            ->leftJoin('articlep.refStockArticle', 'refStockArticlep')
            ->leftJoin('refStockArticlep.refArticle', 'refArticlep')

            ->where('filiere.parc = :parc')
            ->setParameter('parc', $parc);
        return $qb->getQuery()->getResult();
    }

    public function getTotalePGHuitreGreen(Magasins $parc)
    {
        $qb = $this->createQueryBuilder('emplacement')
            ->select('filiere.nomFiliere')
            ->addSelect('segment.nomSegment')
            ->addSelect('flotteur.nomFlotteur')
            ->addSelect('emplacement.place')
            ->join('emplacement.flotteur', 'flotteur')
            ->join('flotteur.segment', 'segment')
            ->join('segment.filiere', 'filiere')
            ->where('filiere.parc = :parc')
            ->andWhere('emplacement.dateDeRemplissage IS NOT NULL')
            ->setParameter('parc', $parc);
        return $qb->getQuery()->getResult();
    }
}
